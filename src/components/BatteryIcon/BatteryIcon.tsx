import * as React from "react";

type Props = {
  percentage: number;
  showPercentage: boolean;
};

const getBatteryPath = (percentage: number) => {
  if (percentage > 80) {
    return (
      <path d="M1097.142857 292.571429v438.857142H146.285714V292.571429h950.857143z m73.142857 329.142857h73.142857V402.285714h-73.142857V237.714286q0-8-5.142857-13.142857t-13.142857-5.142858H91.428571q-8 0-13.142857 5.142858t-5.142857 13.142857v548.571428q0 8 5.142857 13.142857t13.142857 5.142858h1060.571429q8 0 13.142857-5.142858t5.142857-13.142857v-164.571428z m146.285715-219.428572v219.428572q0 30.285714-21.428572 51.714285T1243.428571 694.857143v91.428571q0 37.714286-26.857142 64.571429t-64.571429 26.857143H91.428571q-37.714286 0-64.571428-26.857143T0 786.285714V237.714286q0-37.714286 26.857143-64.571429t64.571428-26.857143h1060.571429q37.714286 0 64.571429 26.857143t26.857142 64.571429v91.428571q30.285714 0 51.714286 21.428572T1316.571429 402.285714z" />
    );
  } else if (percentage > 55) {
    return (
      <path d="M146.285714 731.428571V292.571429h731.428572v438.857142H146.285714z m1097.142857-402.285714q30.285714 0 51.714286 21.428572T1316.571429 402.285714v219.428572q0 30.285714-21.428572 51.714285T1243.428571 694.857143v91.428571q0 37.714286-26.857142 64.571429t-64.571429 26.857143H91.428571q-37.714286 0-64.571428-26.857143T0 786.285714V237.714286q0-37.714286 26.857143-64.571429t64.571428-26.857143h1060.571429q37.714286 0 64.571429 26.857143t26.857142 64.571429v91.428571z m0 292.571429V402.285714h-73.142857V237.714286q0-8-5.142857-13.142857t-13.142857-5.142858H91.428571q-8 0-13.142857 5.142858t-5.142857 13.142857v548.571428q0 8 5.142857 13.142857t13.142857 5.142858h1060.571429q8 0 13.142857-5.142858t5.142857-13.142857v-164.571428h73.142857z" />
    );
  } else if (percentage > 30) {
    return (
      <path d="M146.285714 731.428571V292.571429h512v438.857142H146.285714z m1097.142857-402.285714q30.285714 0 51.714286 21.428572T1316.571429 402.285714v219.428572q0 30.285714-21.428572 51.714285T1243.428571 694.857143v91.428571q0 37.714286-26.857142 64.571429t-64.571429 26.857143H91.428571q-37.714286 0-64.571428-26.857143T0 786.285714V237.714286q0-37.714286 26.857143-64.571429t64.571428-26.857143h1060.571429q37.714286 0 64.571429 26.857143t26.857142 64.571429v91.428571z m0 292.571429V402.285714h-73.142857V237.714286q0-8-5.142857-13.142857t-13.142857-5.142858H91.428571q-8 0-13.142857 5.142858t-5.142857 13.142857v548.571428q0 8 5.142857 13.142857t13.142857 5.142858h1060.571429q8 0 13.142857-5.142858t5.142857-13.142857v-164.571428h73.142857z" />
    );
  } else if (percentage > 5) {
    return (
      <path d="M146.285714 731.428571V292.571429h292.571429v438.857142H146.285714z m1097.142857-402.285714q30.285714 0 51.714286 21.428572T1316.571429 402.285714v219.428572q0 30.285714-21.428572 51.714285T1243.428571 694.857143v91.428571q0 37.714286-26.857142 64.571429t-64.571429 26.857143H91.428571q-37.714286 0-64.571428-26.857143T0 786.285714V237.714286q0-37.714286 26.857143-64.571429t64.571428-26.857143h1060.571429q37.714286 0 64.571429 26.857143t26.857142 64.571429v91.428571z m0 292.571429V402.285714h-73.142857V237.714286q0-8-5.142857-13.142857t-13.142857-5.142858H91.428571q-8 0-13.142857 5.142858t-5.142857 13.142857v548.571428q0 8 5.142857 13.142857t13.142857 5.142858h1060.571429q8 0 13.142857-5.142858t5.142857-13.142857v-164.571428h73.142857z" />
    );
  } else {
    return (
      <path d="M1243.428571 329.142857q30.285714 0 51.714286 21.428572T1316.571429 402.285714v219.428572q0 30.285714-21.428572 51.714285T1243.428571 694.857143v91.428571q0 37.714286-26.857142 64.571429t-64.571429 26.857143H91.428571q-37.714286 0-64.571428-26.857143T0 786.285714V237.714286q0-37.714286 26.857143-64.571429t64.571428-26.857143h1060.571429q37.714286 0 64.571429 26.857143t26.857142 64.571429v91.428571z m0 292.571429V402.285714h-73.142857V237.714286q0-8-5.142857-13.142857t-13.142857-5.142858H91.428571q-8 0-13.142857 5.142858t-5.142857 13.142857v548.571428q0 8 5.142857 13.142857t13.142857 5.142858h1060.571429q8 0 13.142857-5.142858t5.142857-13.142857v-164.571428h73.142857z" />
    );
  }
};

const getBatteryColor = (percentage: number) => {
  if (percentage > 55) {
    return "green";
  } else if (percentage > 30) {
    return "darkorange";
  } else {
    return "red";
  }
};

export const BatteryIcon: React.FC<Props> = props => {
  let { percentage, showPercentage } = props;
  percentage = Math.round(percentage);
  showPercentage = showPercentage && percentage < 100;

  return (
    <div>
      <svg width={38} height={30} viewBox="0 0 1316 1024">
        <defs>
          <clipPath id={`battery-${percentage}`}>
            {getBatteryPath(percentage)}
          </clipPath>
        </defs>
        {showPercentage && (
          <text
            x={650}
            y={650}
            fill={getBatteryColor(percentage)}
            fontSize={400}
            fontWeight={600}
            textAnchor="middle"
          >
            {percentage}
          </text>
        )}
        <rect
          width={1316}
          height={1024}
          fill={getBatteryColor(percentage)}
          clipPath={`url(#battery-${percentage})`}
        />
        {showPercentage && (
          <text
            x={650}
            y={650}
            fill="white"
            fontSize={400}
            fontWeight={600}
            textAnchor="middle"
            clipPath={`url(#battery-${percentage})`}
          >
            {percentage}
          </text>
        )}
      </svg>
    </div>
  );
};

export default BatteryIcon;
